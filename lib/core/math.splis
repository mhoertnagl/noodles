;; Provides common math-related operations.
(do
  ;; TODO: Doc.
  (def *PI* 3.141592653589793)

  ;; `inc` increments the number `n` by one.
  ;;
  ;; @param  num n  A number.
  ;; @return num    `n + 1`.
  (defn inc [n] (+ n 1))

  ;; `dec` decrements the number `n` by one.
  ;;
  ;; @param  num n  A number.
  ;; @return num    `n - 1`.
  (defn dec [n] (- n 1))

  ;; `pos?` returns `true` if the value `n` is greater than `0`; `false`
  ;; otherwise.
  ;;
  ;; @param  num  n  A number.
  ;; @return bool    `true` if `n` is positive; `true` otherwise.
  (defn pos? [n] (> n 0))

  ;; TODO: Tests. Doc.
  (defn even? [n] (= (mod n 2) 0))
  ;; TODO: Tests. Doc.
  (defn odd? [n] (= (mod n 2) 1))

  ;; `abs` computes the absolute value of `n`.
  ;;
  ;; @param  num n  A number.
  ;; @return num    The absolute value `|n|`.
  (defn abs [n] (if (pos? n) n (- n)))

  ;; TODO: Doc.
  (defn sum [xs] (reduce + 0 xs))

  ;; TODO: Doc.
  (defn prod [xs] (reduce * 1 xs))
)
